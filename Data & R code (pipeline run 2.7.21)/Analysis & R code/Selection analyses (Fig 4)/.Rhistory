ylab ("Variant Frequency")
#get the order right for passages
df3.long <- df3.long %>%mutate(Passage = fct_relevel(Passage, "P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret"))
ggplot(df3.long, aes(x=Passage, y=Frequency, group=variant)) +
geom_point(data=SARS2, aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=SARS2)+
geom_point(data=dogs, aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=cats, aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=hams, aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=fer, aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
df3.long(Passage)
df3.long$Passage
ggplot(df3.long, aes(x=Passage, y=Frequency, group=variant)) +
geom_point(data=SARS2, aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=SARS2)+
geom_point(data=dogs, aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=hams, aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=fer, aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=Passage, y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
df3.long$Passage <- factor(df3.long$Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret"))
ggplot(df3.long, aes(x=Passage, y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage), y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
df3.long$Passage <- as.factor(df3.long$Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret"))
as.factor(df3.long$Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret"))
df3 <- df %>%
select(!c("position", "cds", "N_or_S"))
#pull out just TC mutations that went to fixation
df3 <- df3 %>%
filter(variant %in% c("D135E", "D215H", "R685H", "T7I","S194T"))
#make data long and skinny for plotting, rename value as frequency
df3.long <- df3 %>%
pivot_longer(!c(variant), names_to= "dataset", values_to ="Frequency")
df3.long <- df3.long %>%
mutate(Passage = case_when(grepl("C", dataset) ~ "Cats",
grepl("D", dataset) ~"Dogs",
grepl("H", dataset) ~"Hamsters",
grepl("F", dataset) ~"Ferret",
grepl("P1", dataset) ~"P1",
grepl("P2", dataset) ~"P2",
grepl("P3", dataset) ~"P3"))
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant, color = Passage)) +
geom_point() +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant, color = Passage)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=Passage, breaks=c("P1","P2","P3"))
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=Passage))
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=Passage)
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
#plot
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), aes(x=Passage, y=Frequency), show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")))+
geom_point(data=df3.long %>%
filter(Passage=="Dogs"), aes(x=Passage, y=Frequency), color='red', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Cats"), aes(x=Passage, y=Frequency), color='blue', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Hamsters"), aes(x=Passage, y=Frequency), color='green', position=position_jitter(w=0.1,h=0))+
geom_point(data=df3.long %>%
filter(Passage=="Ferret"), aes(x=Passage, y=Frequency), color='purple', position=position_jitter(w=0.1,h=0))+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
colors <- c("P1"="black","P2"="black","P3"="black", "Cats"="red", "Dogs"="blue","Hamsters"="green","Ferret"="purple")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=colors)+
facet_wrap(vars(variant)) +
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_fill_manual(values=colors)+
facet_wrap(vars(variant)) +
theme(bw, text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colors_manual(values=colors)+
facet_wrap(vars(variant)) +
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(Passage, values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
#plot
pdf(file="TC_variants_reversion.pdf")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
dev.off()
dev.off()
dev.off()
#plot
pdf(file="TC_variants_reversion.pdf")
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
dev.off()
getwd()
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
dev.off()
#plot
pdf(file="TC_variants_reversion.pdf", height=10, width=20)
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=10, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
dev.off()
getwd()
dev.off()
#plot
pdf(file="TC_variants_reversion.pdf", height=10, width=20)
ggplot(df3.long, aes(x=factor(Passage, levels = c("P1","P2","P3", "Cats", "Dogs","Hamsters","Ferret") ), y=Frequency, group=variant)) +
geom_point(show.legend=FALSE) +
geom_line(data=df3.long %>%
filter(Passage %in% c("P1","P2","P3")), show.legend=FALSE)+
scale_colour_manual(values=colors)+
facet_wrap(vars(variant)) +
theme_bw()+
theme(text = element_text(size=20, family="sans")) +
xlab ("Passage") +
ylab ("Variant Frequency")
dev.off()
library(readxl)
variant_table_cleaned_combined <- read_excel("Dropbox/SARS-CoV-2-evolution/Pipeline results 1.8.21 (now including v2 samples)/variant_table_cleaned_combined.xlsx")
View(variant_table_cleaned_combined)
#load packages
library(tidyverse)
library(ggplot2)
#start with data frame of cleaned data, combined replicates
df <- as.data.frame(variant_table_cleaned_combined)
#make data long and skinny
df.long <- df %>%
pivot_longer(!c(variant,position,cds,N_or_S), names_to= "dataset", values_to ="frequency")
#make datasets a factor and set order
#actually seems like I need to set order within ggplot for some reason
factor(df.long$dataset, levels=c("SARS2_P1","SARS2_P2","SARS2_P3","C43","C56","C57","C58","C69","C70", "D46", "D47","D48", "F2678","H63","H65","H68"))
ggplot(df.long %>% filter(!is.na(frequency))) +
geom_point(aes(y=factor(dataset, levels = c("SARS2_P1","SARS2_P2","SARS2_P3","C43","C56","C57","C58","C69","C70", "D46", "D47","D48", "F2678","H63","H65","H68")),
x=position, fill=N_or_S), shape=21, size=2.5, alpha=0.8, stroke=FALSE)  +
geom_vline(xintercept=21563, size=0.5)+
geom_vline(xintercept=25384, size=0.5)+
scale_x_continuous(limits=c(0,30000)) +
theme_classic() +
theme(text = element_text(size=10, family="sans")) +
xlab ("Position in genome (nt)") +
ylab ("Dataset")
###mapping nonsynon vs. synon mutations, all mutations in spike are nonsynon
pdf(file="mapping_N_or_S_variants.pdf")
ggplot(df.long %>% filter(!is.na(frequency))) +
geom_point(aes(y=factor(dataset, levels = c("SARS2_P1","SARS2_P2","SARS2_P3","C43","C56","C57","C58","C69","C70", "D46", "D47","D48", "F2678","H63","H65","H68")),
x=position, fill=N_or_S), shape=21, size=2.5, alpha=0.8, stroke=FALSE)  +
geom_vline(xintercept=21563, size=0.5)+
geom_vline(xintercept=25384, size=0.5)+
scale_x_continuous(limits=c(0,30000)) +
theme_classic() +
theme(text = element_text(size=10, family="sans")) +
xlab ("Position in genome (nt)") +
ylab ("Dataset")
dev.off()
install.packages("egg", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
setwd("~/Dropbox/SARS-CoV-2-evolution/Results (pipeline run 2.7.21)/Analysis & R code/Selection analyses (Fig 4)")
#packages
library(tidyverse)
library(ggpubr)
library(openxlsx)
#read in data
df_pop <- read.csv("pop_summary.csv")
df_prod <- read.csv("prod_results.csv")
#clean up data
#rename file as dataset_ID
df_pop <- df_pop %>%
mutate(dataset_ID=file)%>%
select(-file)
df_prod <- df_prod %>%
mutate(dataset_ID=file)%>%
select(-file)
#get rid of file name strings
df_pop$dataset_ID <- gsub("vcfs_1.25.21/","",df_pop$dataset_ID)
df_pop$dataset_ID <- gsub("_R.vcf","",df_pop$dataset_ID)
df_pop$dataset_ID <- gsub(".vcf","",df_pop$dataset_ID)
df_prod$dataset_ID <- gsub("vcfs_1.25.21/","",df_prod$dataset_ID)
df_prod$dataset_ID <- gsub("_R.vcf","",df_prod$dataset_ID)
df_prod$dataset_ID <- gsub(".vcf","",df_prod$dataset_ID)
#make a species category, and get rid of the vero cell passaged samples for now
df_pop <- df_pop%>%
mutate(species = case_when(grepl("C", dataset_ID) ~ "Cats",
grepl("D", dataset_ID) ~"Dogs",
grepl("H", dataset_ID) ~"Hamsters",
grepl("F", dataset_ID) ~"Ferret")) %>%
filter(dataset_ID != "Passage_1") %>%
filter(dataset_ID != "Passage_2") %>%
filter(dataset_ID != "Passage_3") %>%
mutate(species=fct_relevel(species,"Dogs", "Cats","Hamsters","Ferret"))
df_prod <- df_prod%>%
mutate(species = case_when(grepl("C", dataset_ID) ~ "Cats",
grepl("D", dataset_ID) ~"Dogs",
grepl("H", dataset_ID) ~"Hamsters",
grepl("F", dataset_ID) ~"Ferret")) %>%
filter(dataset_ID != "Passage_1") %>%
filter(dataset_ID != "Passage_2") %>%
filter(dataset_ID != "Passage_3")
#calculate piN/piS and add some things to compare piN and piS
df_pop <- df_pop %>%
mutate(piN_div_piS=(piN/piS)) %>% #allows you to see if its >1, =1, or <1
mutate(piN_greater=ifelse((piN>piS), TRUE, FALSE)) %>% #allows you to see if piN>piS, even if one of them is 0
mutate(piS_greater=ifelse((piS>piN), TRUE, FALSE)) %>%
select(dataset_ID, pi, species, piN, piS,piN_div_piS)
df_prod <- df_prod %>%
mutate(piN_div_piS=(piN/piS)) %>% #allows you to see if its >1, =1, or <1
mutate(piN_greater=ifelse((piN>piS), TRUE, FALSE)) %>% #allows you to see if piN>piS, even if one of them is 0
mutate(piS_greater=ifelse((piS>piN), TRUE, FALSE)) %>%
select(dataset_ID, gene_product, species, piN, piS,piN_div_piS)%>%
arrange(gene_product)
table1 <- df_pop %>%
select(-species)
table2 <- df_prod %>%
select(-species)
#first, look at the difference between piN and piS at a population level
t.test(x=df_pop$piN, y=df_pop$piS,paired=TRUE)
#break it down by species
#have to get rid of the ferret because there aren't multiple values of piN and piS
#this summarizes the data by species, then does a t-test between piN and piS for each of three species with multiple individuals
#dogs are significant, hamsters are significant
population_summary <- df_pop %>%
filter(species!="Ferret") %>%
pivot_longer(!c("dataset_ID","species","pi", "piN_div_piS"),
names_to="variable", values_to="value") %>%
group_by(species, variable) %>%
summarise(value=list(value)) %>%
spread(variable, value)  %>%
group_by(species) %>%
mutate(p_value = t.test(unlist(piN), unlist(piS),paired=TRUE)$p.value,
t_value = t.test(unlist(piN), unlist(piS),paired=TRUE)$statistic)
#now look at product summary data
#this summarizes the data by species and gene, and then does a ttest between piN and piS for each gene
#orf1ab, spike, membrane are significant
product_summary <- df_prod %>%
pivot_longer(!c("dataset_ID","gene_product", "species", "piN_div_piS"),
names_to="variable", values_to="value") %>%
group_by(gene_product, variable) %>%
summarise(value=list(value)) %>%
spread(variable, value) %>%
group_by(gene_product) %>%
mutate(p_value = t.test(unlist(piN), unlist(piS),paired=TRUE)$p.value,
t_value = t.test(unlist(piN), unlist(piS),paired=TRUE)$statistic)
product_summary %>%
filter(p_value<=0.05) #when you take all of the data together, M, orf1ab, and S are significant
plot1 <- ggpaired(df_pop, cond1 = "piN", cond2 = "piS",
color = "condition", line.color = "gray", line.size = 1,point.size=6,
palette="npg", xlab=FALSE, ylab=FALSE, legend="none")+
stat_compare_means(paired = TRUE, method="t.test",
vjust=1, hjust=-0.3, size=16, label="p.format")
plot1 <- ggpar(plot1, ticks=FALSE, tickslab=FALSE)+ rremove("axis")
plot1
View(df_pop)
dfpop <- df_pop
dfpop <- dfpop %>%
mutate(species="all")
View(dfpop)
dfpop <- dfpop %>%
mutate(species="All")
View(dfpop)
merge(dfpop, df_pop)
full_join(dfpop, df_pop)
df_pop <- full_join(dfpop, df_pop)
View(df_pop)
#(2)
options(scipen=8)
plot2 <- ggpaired(df_pop, cond1 = "piN", cond2 = "piS",
color = "condition", line.color = "gray", line.size = 0.4,
palette="npg",xlab=FALSE, ylab=FALSE, legend="none", ylim=c(0, 0.00032))+
facet_grid(cols=vars(species))+
stat_compare_means(method="t.test", paired=TRUE, size=4,
vjust=-2, label="p.format")
plot2
#(3)
#pull out the interesting genes
df2 <- df_prod %>%
filter(gene_product %in% c("S","orf1ab", "M"))
plot3 <- ggpaired(df2, cond1 = "piN", cond2 = "piS",
color = "condition", line.color = "gray", line.size = 0.4,
palette="npg",xlab=FALSE, ylab=FALSE, legend="none", ylim=c(0,0.0012))+
facet_grid(cols=vars(gene_product))+
stat_compare_means(method="t.test", paired=TRUE, size=4,
vjust=-2, label="p.format")
plot3
pdf("selection.pdf", onefile=F)
ggarrange(plot2, plot3, ncol=1, nrow=2, labels="AUTO")
dev.off()
